name: releaseBuild
# this will help you specify where to run 
on:
  push:
    branches:
      - 'main' # Push events to matching v*, i.e. v1.0, v20.15.10
# this is where the magic happens, 
# each job happens in parallel after create_release
# each job uses upload_url from the create_release dependency
jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      build_id: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: true
        prerelease: true
      outputs:
        upload_url: ${{ outputs.upload_url }}

  build_on_mac:
    needs: create_release
    runs-on: macOS-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
      with:
        ref: main
    - name: Setup node
      uses: actions/setup-node@master
      with:
        node-version: 17.3
    - name: Install dependencies
      run: yarn install
    - name: Build on MacOS
      run: yarn run dist -p onTagOrDraft
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: electron-builder
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: dist/shoebox*.dmg
#        asset_name: shoebox.dmg
        asset_content_type: application/octet-stream
  
  build_on_linux:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
      with:
        ref: main
    - name: Setup node
      uses: actions/setup-node@master
      with:
        node-version: 17.3
    - name: Install dependencies
      run: yarn install
    - name: Build on linux
      run: yarn run dist -p onTagOrDraft
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: electron-builder
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: dist/shoebox*AppImage
#        asset_name: shoebox.AppImage
        asset_content_type: application/octet-stream
  
  build_on_win:
    needs: create_release
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
      with:
        ref: main        
    - name: Setup node
      uses: actions/setup-node@master
      with:
        node-version: 17.3
    # - name: install node tools
    #   run: yarn global add windows-build-tools
    # - name: install node-gyp
    #   run: yarn global add node-gyp
    - name: Install dependencies
      run: yarn install
    - name: Build on Windows
      run: yarn run dist -p onTagOrDraft
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: electron-builder
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: dist/shoebox*.exe
#        asset_name: shoebox.exe
        asset_content_type: application/octet-stream